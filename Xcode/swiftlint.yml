# COMMAND LINE RULES: ./swiftlint rules
# RULES URL: https://github.com/realm/SwiftLint/blob/master/Rules.md
# RULES CONFIG URL: https://github.com/realm/SwiftLint/tree/master/Source/SwiftLintFramework/Rules/RuleConfigurations

excluded: 
    # case-sensitive paths to ignore during linting. Takes precedence over `included`
included:
    # case-sensitive paths to include during linting. `--path` is ignored if present
disabled_rules:
    - inclusive_language
    # Use named arguments in multiline closures
    - anonymous_argument_in_multiline_closure
    # Magic numbers should be replaced by named constants
    - no_magic_numbers
    # Properties should have a type interface
    - explicit_type_interface
    # Types used for hosting only static members should be implemented as a caseless enum to avoid instantiation
    - convenience_type
    # Extensions shouldn’t override declarations
    - override_in_extension
    # Static strings should be used as key/comment in NSLocalizedString in order for genstrings to work
    - nslocalizedstring_key
    # Prefer initializers over object literals
    - discouraged_object_literal
    # Trailing closure syntax should be used whenever possible
    - trailing_closure
    - attributes

opt_in_rules:  # some rules are only opt-in
    # Conditional statements should always return on the next line
    - conditional_returns_on_newline
    # Force unwrapping should be avoided.
    - force_unwrapping
    # Implicitly unwrapped optionals should be avoided when possible.
    - implicitly_unwrapped_optional
    # nil coalescing operator is only evaluated if the lhs is nil, coalescing operator with nil as rhs is redundant
    - redundant_nil_coalescing
    # Some methods should not call super
    - prohibited_super_call
    # Some overridden methods should always call super
    - overridden_super_call
    # Prefer using .first(where:) over .filter { }.first in collections.
    - first_where
    # Prefer checking isEmpty over comparing count to zero.
    - empty_count
    # Closure expressions should have a single space inside each brace.
    - closure_spacing
    # Closure end should have the same indentation as the line that started it.
    - closure_end_indentation
    # Explicitly calling .init() should be avoided.
    - explicit_init
    # Function parameters should be aligned vertically if they're in multiple lines in a method call.
    - vertical_parameter_alignment_on_call
    # Functions and methods parameters should be either on the same line, or one per line.
    - multiline_parameters
    # IBOutlets should be private to avoid leaking UIKit to higher layers.
    - private_outlet
    - private_action
    # A fatalError call should have a message.
    - fatal_error_message
    # Prefer contains over first(where:) != nil
    - contains_over_first_not_nil
    # Array and dictionary literal end should have the same indentation as the line that started it.
    - literal_expression_end_indentation
    # Prefer using min() or max() over sorted().first or sorted().last
    - sorted_first_last
    # Prefer checking isEmpty over comparing string to an empty string literal.
    - empty_string
    # Prefer implicit returns in closures, functions and getters
    - implicit_return
    # Attributes should be on their own lines in functions and types, but on the same line as variables and imports
    - attributes
    # Closure bodies should not span too many lines
    - closure_body_length
    # Prefer contains over comparing filter(where:).count to 0
    - contains_over_filter_count
    # Prefer contains over using filter(where:).isEmpty
    - contains_over_filter_is_empty
    # Prefer contains over range(of:) != nil and range(of:) == nil
    - contains_over_range_nil_comparison
    # Enum cases and static members named none are discouraged as they can conflict with Optional<T>.none
    - discouraged_none_name
    # Prefer checking isEmpty over comparing collection to an empty array or dictionary literal
    - empty_collection_literal
    # TODOs and FIXMEs should be resolved prior to their expiry date.
    - expiring_todo
    # File name should not contain any whitespace
    - file_name_no_space
    # Prefer flatMap over map followed by reduce([], +)
    - flatmap_over_map_reduce
    # Prefer to locate parameters with defaults toward the end of the parameter list
    - function_default_parameter_at_end
    # Comparing two identical operands is likely a mistake
    - identical_operands
    # Prefer using .last(where:) over .filter { }.last in collections
    - last_where
    # Prefer using the isMultiple(of:) function instead of using the remainder operator (%)
    - legacy_multiple
    # Variable declarations should be separated from other statements by a blank line
    - let_var_whitespace
    # Prefer regular comments over doc comments in local scopes
    - local_doc_comment
    # Modifier order should be consistent.
    - modifier_order
    # Chained function calls should be either on the same line, or one per line
    - multiline_function_chains
    # Operators should be surrounded by a single whitespace when they are being used
    - operator_usage_whitespace
    # Matching an enum case against an optional enum without ‘?’ is supported on Swift 5.1 and above
    - optional_enum_case_matching
    # Prefer .zero over explicit init with zero parameters (e.g. CGPoint(x: 0, y: 0))
    - prefer_zero_over_explicit_init
    # Combine Subject should be private
    - private_subject
    # Camel cased cases of Codable String enums should have raw values
    - raw_value_for_camel_cased_codable_enum
    # Prefer reduce(into:_:) over reduce(_:_:) for copy-on-write types
    - reduce_into
    # Use shorthand syntax for optional binding
    - shorthand_optional_binding
    # Cases inside a switch should always be on a newline
    - switch_case_on_newline
    # Prefer someBool.toggle() over someBool = !someBool
    - toggle_bool
    # Don’t include vertical whitespace (empty line) before closing braces
    - vertical_whitespace_closing_braces
    # Don’t include vertical whitespace (empty line) after opening braces
    - vertical_whitespace_opening_braces
    # Arguments should be either on the same line, or one per line
    - multiline_arguments

analyzer_rules:
    # Declarations should be referenced at least once within all files linted
    - unused_declaration
    # All imported modules should be required to make the file compile
    - unused_import

trailing_whitespace:
    ignores_empty_lines: true
    ignores_comments: true

line_length:
    warning: 160
    error: 250
    ignores_comments: true
    ignores_function_declarations: false
    ignores_urls: true
    ignores_interpolated_strings: true

vertical_whitespace:
    max_empty_lines: 2

identifier_name:
    min_length: 2
    max_length: 45

type_name:
    max_length:
        warning: 50
        error: 60

nesting:
    type_level:
        warning: 2

file_length:
    warning: 450
    error: 600
    ignore_comment_only_lines: true

cyclomatic_complexity:
    warning: 15

function_parameter_count:
    warning: 6

closure_body_length:
    warning: 40
    error: 50

large_tuple:
    warning: 4
    error: 6

multiline_arguments:
    only_enforce_after_first_closure_on_first_line: true